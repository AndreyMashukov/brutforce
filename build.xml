<project name="BrutForce Service" default="build" basedir=".">

    <property environment="env"/>

    <!-- Clean up -->
    <target name="clean">
        <delete dir="build"/>
    </target>

    <!-- Download dependencies -->
    <target name="dependencies">
        <exec executable="composer" failonerror="true">
            <arg line="install --prefer-dist"/>
        </exec>
    </target>

    <!-- Run code analysis -->
    <target name="codeanalysis">
        <sequential>
            <antcall target="pdepend"/>
            <antcall target="phpmd"/>
            <antcall target="phploc"/>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
        </sequential>
    </target>

    <!-- Generate jdepend.xml and software metrics charts -->
    <target name="pdepend">
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <exec executable="vendor/bin/pdepend">
            <arg line="--jdepend-xml=${basedir}/build/logs/jdepend.xml --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg --jdepend-chart=${basedir}/build/pdepend/dependencies.svg ${basedir}/src"/>
        </exec>
    </target>

    <!-- Generate pmd.xml -->
    <target name="phpmd">
        <mkdir dir="${basedir}/build/logs"/>
        <exec executable="vendor/bin/phpmd" failonerror="true">
            <arg line="${basedir}/src xml md_ruleset.xml --exclude vendor --reportfile ${basedir}/build/logs/pmd_src.xml"/>
        </exec>
        <exec executable="vendor/bin/phpmd" failonerror="true">
            <arg line="${basedir}/tests xml md_ruleset.xml --exclude vendor --reportfile ${basedir}/build/logs/pmd_tests.xml"/>
        </exec>
    </target>

    <!-- Generate phploc.csv -->
    <target name="phploc">
        <mkdir dir="${basedir}/build/logs"/>
        <exec executable="vendor/bin/phploc">
            <arg line="--log-csv ${basedir}/build/logs/phploc.csv ${basedir}/src"/>
        </exec>
    </target>

    <!-- Generate pmd-cpd.xml -->
    <target name="phpcpd">
        <mkdir dir="${basedir}/build/logs"/>
        <exec executable="vendor/bin/phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml --exclude vendor ${basedir}/var"/>
        </exec>
    </target>

    <!-- Check code style -->
    <target name="phpcs">
        <exec executable="vendor/bin/php-cs-fixer" failonerror="true">
            <arg line="fix --dry-run -v --using-cache=no --diff --config ${basedir}/.php_cs.dist"/>
        </exec>
    </target>

    <!-- Run tests -->
    <target name="tests">
        <sequential>
            <antcall target="phpunit"/>
    <!--    <antcall target="checkcoveragexistence"/> -->
        </sequential>
    </target>

<!-- Run unit tests -->
    <target name="phpunit">
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/testdox"/>
        <exec executable="vendor/bin/phpunit" failonerror="true">
            <arg line="--debug -c phpunit.xml.dist --exclude-group integration"/>
        </exec>
    </target>

    <!-- Ensuring that coverage was actually built
    <target name="checkcoveragexistence">
        <fail message="Coverage was not fully built">
            <condition>
                <or>
                    <not>
                        <available file="${basedir}/build/logs/clover.xml"/>
                    </not>
                    <not>
                        <available file="${basedir}/build/coverage/index.html"/>
                    </not>
                </or>
            </condition>
        </fail>
    </target> -->

    <!-- Full build -->
    <target name="build">
        <sequential>
            <antcall target="clean"/>
            <antcall target="dependencies"/>
            <antcall target="codeanalysis"/>
            <antcall target="tests"/>
        </sequential>
    </target>

</project>